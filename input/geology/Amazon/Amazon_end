

        // vz_z_upper="-exp(-((x-.5)^2 + (y-.5)^2)/(.1^2))"
        vz_z_upper_is_dirichlet=FALSE

        vz_z_lower="0"
        vz_z_lower_is_dirichlet=TRUE
        vx_y_upper="0"
        vx_y_upper_is_dirichlet=FALSE
        vx_y_lower="0"
        vx_y_lower_is_dirichlet=FALSE
        vx_z_upper="0"
        vx_z_upper_is_dirichlet=FALSE
        vx_z_lower="0"
        vx_z_lower_is_dirichlet=FALSE
        vy_x_upper="0"
        vy_x_upper_is_dirichlet=FALSE
        vy_x_lower="0"
        vy_x_lower_is_dirichlet=FALSE
        vy_z_upper="0"
        vy_z_upper_is_dirichlet=FALSE
        vy_z_lower="0"
        vy_z_lower_is_dirichlet=FALSE
        vz_x_upper="0"
        vz_x_upper_is_dirichlet=FALSE
        vz_x_lower="0"
        vz_x_lower_is_dirichlet=FALSE
        vz_y_upper="0"
        vz_y_upper_is_dirichlet=FALSE
        vz_y_lower="0"
        vz_y_lower_is_dirichlet=FALSE
    }
}

CartesianGridGeometry {
    domain_boxes = [(0,0,0), (5,7,1)]
    x_lo         = 0, 0, -2003000
    x_up         = 6000000, 8000000, -3001
}

StandardTagAndInitialize {
    tagging_method = "GRADIENT_DETECTOR"
}

PatchHierarchy {
    max_levels = 6
    proper_nesting_buffer = 2, 2, 2, 2, 2, 2, 2
    ratio_to_coarser {
        level_1            = 2, 2, 2
        level_2            = 2, 2, 2
        level_3            = 2, 2, 2
        level_4            = 2, 2, 2
        level_5            = 2, 2, 2
        level_6            = 2, 2, 2
        level_7            = 2, 2, 2
    }
    largest_patch_size {
        level_0 = -1, -1, -1
    }
}

GriddingAlgorithm {
    enforce_proper_nesting = TRUE
    extend_to_domain_boundary = FALSE
    proper_nesting_buffer = 2, 2, 2, 2, 2, 2, 2
    // load_balance = FALSE
    efficiency_tolerance = 0.80
    combine_efficiency = 0.75
    // write_regrid_boxes = TRUE
    // read_regrid_boxes = TRUE
    // regrid_boxes_filename = "grid"
    check_nonrefined_tags = "ERROR"
    check_overlapping_patches = "ERROR"
    extend_tags_to_bdry = TRUE
    sequentialize_patch_indices = TRUE
    barrier_before_regrid = TRUE
    barrier_before_find_refinement = TRUE
    barrier_before_cluster = TRUE
    barrier_before_nest = TRUE
    barrier_before_limit = TRUE
    barrier_before_extend = TRUE
    barrier_before_balance = TRUE
    barrier_after_find_refinement = TRUE
    coalesce_boxes = FALSE
}
